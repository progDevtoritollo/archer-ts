services:
  # frontend:      #part to build frontend 
  #   build: ./
  #   ports:
  #     - "3000:3000"
  #   stdin_open: true
  #   command: npm start
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
      
  # frontend:     #part to start created frontend 
  #   image: 66567575/uf767fg767yyu
  #   pull_policy: always
  #   restart: on-failure
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - backend
  #   links:
  #     - backend


  backend:
    image: 810670285/ordradmither
    pull_policy: always
    restart: on-failure
    depends_on:
      - postgres
    links:
      - postgres
    ports:   # if start in prod  - delite ports 
      - "8080:8080"
    environment:
      spring.datasource.url: "jdbc:postgresql://postgres:5432/archer"

  postgres:
    image: "postgres"
    pull_policy: always
    restart: on-failure
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=archer
    volumes:
      - ./db-data:/var/lib/postgresql/data



      #  comand: docker compose up